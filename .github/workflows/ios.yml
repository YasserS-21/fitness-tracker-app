# Name that appears in GitHub Actions tab
name: FitnessTracker Expo CI

# Defines when this workflow will run
on:
  push:
    branches: [ "main" ]  # Triggers when any commit is pushed to main branch
  pull_request:
    branches: [ "main" ]  # Triggers when a PR is created targeting main branch

jobs:
  # Each job runs in a fresh virtual environment
  build-and-test:
    # Ubuntu is chosen because:
    # 1. It's cheaper than macOS runners
    # 2. Sufficient for Expo builds
    # 3. Has faster startup times
    runs-on: ubuntu-latest
    
    steps:
    # Checkout is always the first step
    # It copies your repository code into the CI environment
    - name: Checkout code
      uses: actions/checkout@v4  # v4 is the version of the action
    
    # Sets up Node.js and configures Yarn caching
    # Caching speeds up builds by saving node_modules between runs
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'  # Specify Node.js version
        cache: 'yarn'  # Enable caching for Yarn dependencies
        cache-dependency-path: frontend/FitnessTracker/yarn.lock
        
    # Install Yarn package manager globally
    # This is needed because we're using Yarn instead of npm
    - name: Install Yarn
      run: npm install -g yarn  # -g means install globally
        
    # Set up Expo CLI for building React Native app
    # This step is specific to Expo/React Native projects
    - name: Setup Expo
      uses: expo/expo-github-action@v8
      with:
        expo-version: latest  # Always use latest Expo version
        token: ${{ secrets.EXPO_TOKEN }}  # Access token for Expo account
        
    # Install project dependencies using Yarn
    # --frozen-lockfile ensures exact versions from yarn.lock
    - name: Install dependencies
      run: |  # The | allows multiple lines of commands
        # First navigate to project directory
        cd frontend/FitnessTracker
        # Install dependencies exactly as specified in yarn.lock
        # This is similar to npm ci - it won't update the lockfile
        yarn install
        
    # TypeScript type checking
    # This catches type errors before building
    - name: Run type checking
      run: |
        cd frontend/FitnessTracker
        # --noEmit means check types without generating JS files
        yarn tsc --noEmit
        
    # Build a preview version of the app
    # This step creates the necessary native projects
    - name: Build preview
      run: |
        cd frontend/FitnessTracker
        # prebuild creates iOS/Android native projects
        # --platform ios specifies we want iOS build
        yarn expo prebuild --platform ios

    # Commented out test step - uncomment when you add tests
    # - name: Run tests
    #   run: |
    #     cd frontend/FitnessTracker
    #     yarn test

    # Optional: Save build output for debugging or deployment
    # This step saves the build artifacts for later access
    # - name: Save Build Output
    #   uses: actions/upload-artifact@v3
    #   with:
    #     name: app-build  # Name of the saved artifact
    #     path: frontend/FitnessTracker/ios/build  # What to save